type Query{
    # Our first GQL query
    firstQuery:String

    # Second query with arguments
    secondQuery(firstName:String!, lastName:String!): String

    # Get all the members records with filtering options for Teacher/Student
    getMembers(filter: MemberType): [MemberResponse]
}

type MemberResponse {
    id: ID!
    name: String!
    contact: String
    type: MemberType
    subjectData: [SubjectResponse]
}

type StudentSubjectResponse implements SubjectResponse {
    subjectName: String!
    marks: Float
}

type TeacherSubjectResponse implements SubjectResponse {
    subjectName: String!
    experience: String!
}

interface SubjectResponse {
    subjectName: String!
}

enum MemberType {
    TEACHER
    STUDENT
    ALL
}


